{
  "Client Component": {
    "prefix": "rcc",
    "body": ["'use client';"],
    "description": "标识客户端组件",
    "scope": "typescriptreact"
  },
  "Server Component": {
    "prefix": "rsc",
    "body": ["'use server';"],
    "description": "标识服务器组件",
    "scope": "typescriptreact"
  },
  "React Functional Component": {
    "prefix": "rfc",
    "body": [
      "import React from 'react';",
      "",
      "type Props = {",
      "",
      "};",
      "",
      "const ${1:ComponentName}: React.FC<Props> = (props) => {",
      "  return (",
      "    <div>",
      "      $0",
      "    </div>",
      "  );",
      "};",
      "",
      "export default ${1:ComponentName};"
    ],
    "description": "创建函数组件",
    "scope": "typescriptreact"
  },
  "useState Hook": {
    "prefix": "us",
    "body": ["const [${1:state}, set${2:State}] = useState(${3:initialValue});", "$0"],
    "description": "插入 useState",
    "scope": "typescriptreact"
  },
  "useEffect Hook": {
    "prefix": "ue",
    "body": ["useEffect(() => {", "$1", "}, [${2}]);", "$0"],
    "description": "插入 useEffect",
    "scope": "typescriptreact"
  },
  "useContext Hook": {
    "prefix": "uc",
    "body": ["const ${1:context} = useContext(${2:Context});", "$0"],
    "description": "插入 useContext",
    "scope": "typescriptreact"
  },
  "useRef Hook": {
    "prefix": "ur",
    "body": ["const ${1:ref} = useRef(${2:null});", "$0"],
    "description": "插入 useRef",
    "scope": "typescriptreact"
  },
  "useCallback Hook": {
    "prefix": "ucb",
    "body": ["const ${1:memoizedFn} = useCallback(() => {", "$2", "}, [${3}]);", "$0"],
    "description": "插入 useCallback",
    "scope": "typescriptreact"
  },
  "useMemo Hook": {
    "prefix": "um",
    "body": ["const ${1:memoizedVal} = useMemo(() => {", "$2", "}, [${3}]);", "$0"],
    "description": "插入 useMemo",
    "scope": "typescriptreact"
  }
}
